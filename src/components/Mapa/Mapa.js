import React, { useState } from 'react'; 
import { Link } from 'react-router-dom'
import Button from '../Button/Button'
import './Mapa.scss'   

const mountainsAll = {
  'PzMCxhLn8bLckCsiq2Kl': "418.15 154 413.53 154 415.84 150 418.15 146 420.46 150 422.77 154 418.15 154",
  'ezehdAdtKDdSWAOxkJ57': "383.15 253 378.53 253 380.84 249 383.15 245 385.46 249 387.77 253 383.15 253",
  'g5SgXgzuzk81fn5bFKTE': "270.15 181 265.53 181 267.84 177 270.15 173 272.46 177 274.77 181 270.15 181"
}   



const Mapa = ({ mountains }) => {
  
  const[popUpMountain,setPopUpMountain] = useState(null)
  const[popUpleft,setPopUpLeft] = useState(null)
  const[popUpRight,setPopUpRight] = useState(null)

  
  const handleOnMouseEnter = (e, id) => {
      const mountainHover = mountains.filter(m => m.id = id)
      setPopUpMountain(mountainHover[0])
      setPopUpLeft(e.pageX)
      console.log("handleOnMouseEnter -> e.pageX", e.pageX)
      setPopUpRight(e.pageY)
      console.log("handleOnMouseEnter -> e.pageY", e.pageY)
      console.log(popUpMountain)
      
  }

  const handleClosePopUp = () => {
    setPopUpMountain(null)
  }


  

    return (
      <>
       <div className="map-container">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500.83 486.53">
        <defs>
          <style dangerouslySetInnerHTML={{__html: ".cls-1{fill:#262424;fill-rule:evenodd;}.cls-2{fill:#e6e3d1;}" }} />
        </defs>
        <title>mapa</title>
        <g id="Layer_1" data-name="Layer 1">
          <path className="cls-1" d="M106.91,7.84h2.44c5.7,8.46,18,5.81,23.88,14.07.57.8,2.68.45,4.06.75,9.2,2,18.58,3.53,27.52,6.41,3.84,1.24,6.69,5.42,10.1,8.15,1.94,1.55,4,3.88,6.14,4.09,5.06.51,11,1.53,15.2-.5,9.41-4.54,12.35.37,16.11,7.45,4.14,7.79,10,14.75,7.36,24.47-.36,1.31-.54,2.66-.79,3.87,6.84,4.06,6.86,4.79,2.09,11.18-1.17,1.56-2.33,4-2,5.67,1.5,8.06,6.17,10.1,13.81,6.6,4.85-2.23,9.63-5.61,14.67-6.14,5.55-.57,8.46-2.79,10.18-7.54,5.66,1.59,11.09,2.94,16.41,4.66,3.74,1.21,7.32,2.91,11,4.39,1.95.79,4.44,2.73,5.78,2.13,4.52-2,5.93.54,7.14,3.81,1.12,3,2.12,6.08,3,9.17,2.69,9.5,8.32,11.39,16,5.06,2.79-2.3,5-5.3,7.7-7.68,1.77-1.55,4.89-4.13,5.89-3.57,6.95,3.91,12.94-.22,19.28-1.4a6.89,6.89,0,0,1,4.18.41c9.35,5,20.24,7.39,27.6,15.79,3,3.43,5.86,3.69,10.12,1.88a17.27,17.27,0,0,1,10.66-.63c6.22,1.72,8,.79,7.83-5.81-.2-6,1.74-7.66,7.89-8,3.72-.2,7.43-1.28,11.09-2.16,6.53-1.56,10.23-8.93,17.83-8.53,2.83.14,5.71-.85,8.58-.93,2.34-.06,4.79,1,7,.63,3.72-.6,5.94.29,6.62,4.14S472,104,475.8,103.2c8.18-1.72,11.41,1.09,12.22,9.46.13,1.41-.61,3.3.08,4.16,1.37,1.72,4,4.44,5.13,4,7-2.43,12.6.38,18.13,3.94v4.87c-2,2.87-5.09,5.51-5.71,8.65-1,5-3.73,6-7.73,5.47a69.24,69.24,0,0,1-11.9-2.36c-4.53-1.41-6.75.05-6.88,4.56-.29,10.41,2.22,19.8,11.17,26.2,4.79,3.41,6.17,7.52,3.31,12.53-2.58,4.54-1.75,8.18,1.07,12.29,4.82,7.05,4.46,12.49-1.67,18.45-4,3.9-9.9,6-13.36,10.25a150,150,0,0,1-23.21,22.15c-3.6,2.86-7,6-10.92,8.42-6.8,4.19-13.9,7.9-20.88,11.78-1.94,1.09-3.88,2.2-5.9,3.12-16,7.22-32,14.38-47.94,21.62-1.45.66-2.65,1.85-4.05,2.66-4.64,2.68-9.43,5.11-13.93,8-3.76,2.42-8.1,4.71-10.59,8.2-4.82,6.72-8.48,14.27-12.68,21.44-3.8,6.48-9.38,10.79-16.86,11.73-10.55,1.33-20.85,2.78-31.05,6.6-24.75,9.25-51.95,9.83-76.33,20.74-1.25.55-2.79.4-4.13.79-7.34,2.12-17,2.17-21.39,7-5.62,6.2-10.22,5.3-16.93,5.78-7.38.51-15.94,3.81-21.37,8.76-14,12.8-26.7,27.11-39.68,41-1.14,1.22-1.25,4.26-.61,6,.52,1.43,2.86,2.21,4.39,3.28l.77-1.07L105,440.92c3.88,1.56,6.82,4.13,9.76,6.69,1.65,1.44,3.11,3.28,5,4.24,6.61,3.37,7.73,8.4,1.46,12.53C111.25,471,101.58,477.46,94,487c-1.71,2.17-7.2,1.54-11,1.75-.8,0-2.38-1.91-2.36-2.91s1.58-2.3,2.71-2.62c3.68-1,7.54-1.41,11.18-2.56,3.16-1,6.62-2.22,6.12-7.18-13.12.91-25.89,1.42-31.53,16.48-.77,2.08-4.27,4.49-6.37,4.37-2.52-.14-6.53-2.4-7.07-4.48-2.55-9.84-10.21-11.8-18.35-13.21-10.54-1.83-11.92-3.82-8.1-13.34,1.19-3,.51-5.73-2.3-5.3-5.7.89-6.13-2.93-6.92-6.37l-9-1.37-.51-1.88c2.82-1.54,5.56-3.25,8.47-4.58,6.26-2.9,11.63-10.13,9.35-13.63-4.5-6.87-2.91-13.12,1-19.29S33,398.05,29,392.65a53.07,53.07,0,0,1-8.29-14.95c-1.69-5-1.25-8.08,3.47-10.28,6.09-2.85,12-5.66,13.94-13.19.5-2,3-3.68,5-4.92,6.34-4,7.62-10.93,3.39-17.05a7.76,7.76,0,0,1-.56-6.41c2.74-6.46,2.72-7.36-3.66-10-2.9-1.18-4.65-2.75-1.82-5.1,4.83-4,5-8.63,4-14.24-.31-1.83,1.74-4.5,3.38-6.09,1.33-1.29,3.74-1.39,5.53-2.29,4.83-2.45,6.71-16.53,2.61-16.69-8.7-.33-11.24-4.82-12.07-12,0-.33-.75-.62-.74-.92.12-2.68-.6-6,.71-7.91a52.32,52.32,0,0,1,9.79-10.49C56,238.2,59.16,237.31,62,236c1.41-.63,4.12-1,4.18-1.63.8-8.86,9.66-10.67,14.67-14.41,7.16-5.34,5.44-10.57,5.41-16.91l-6.68-1.25c.64-1.94,1.1-5,1.74-5,5.15-.32,7-4.94,10.42-7.2,4.23-2.74,6.41-6,7-10.58a167.83,167.83,0,0,1,13.56-47c5.52-12.06-3.72-21.82-3.86-32.91,0-1-2.58-1.75-2.87-2.9C105,93.75,104,90.6,105,88.65c3.38-6.65,7.7-12.81,11.36-19.33,2.72-4.84,1.59-7.7-3.19-9.56-10.47-4.08-11.47-5.91-12.15-17.35-.22-3.71-2.24-7.3-3.53-11.22C97.51,22.86,98.69,13.76,106.91,7.84Z" transform="translate(-10.53 -7.84)" /></g>
        <g id="Layer_2" data-name="Layer 2">
          {mountains.map(m => (
            <polygon
              key={m.id} 
              className="cls-2" 
              onMouseEnter={ (e) => handleOnMouseEnter(e, m.id)} 
              points={mountainsAll[m.id]} />)

          )}
        </g>
      </svg>
      
      { popUpMountain && (
          <div className="hover-popUp" style={{position: 'absolute', left: popUpleft, top: popUpRight }}>
              <div className="img-container" style={{backgroundImage:`url(${popUpMountain.img})`}}></div>
              <h1 className="regular">{popUpMountain.name}</h1>
              <hr className="fine-line"></hr>
              <p className="light desc">{popUpMountain.desc}</p>
              <div className="pop-buttons">
              <Button ><Link to={`/mountain/${popUpMountain.name}`} id="btn">Veure +</Link></Button>
              <Button onClick={handleClosePopUp}>Tanca</Button>
              </div>
          </div>
        )
      }
     
      </div>  
      </>
      

    )
}   


export default Mapa;